<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njit.zang.mapper.SubscribeNoticeDao">
  <resultMap id="BaseResultMap" type="com.njit.zang.model.SubscribeNotice">
    <id column="sn_id" jdbcType="VARCHAR" property="snId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="feed_id" jdbcType="VARCHAR" property="feedId" />
    <result column="read" jdbcType="INTEGER" property="read" />
  </resultMap>
  <resultMap id="SubscribeNoticeDto" type="com.njit.zang.dto.SubscribeNoticeDto">
    <id column="sn_id" jdbcType="VARCHAR" property="snId" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="feed_id" jdbcType="VARCHAR" property="feedId" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="read" jdbcType="INTEGER" property="read" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sn_id, from_user_id, to_user_id, content, `time`, feed_id, `read`
  </sql>
  <select id="selectUnreadList" parameterType="java.lang.String" resultMap="SubscribeNoticeDto">
    SELECT
    `user`.avatar,
    `user`.nickname,
    subscribe_notice.sn_id,
    subscribe_notice.`read`,
    subscribe_notice.feed_id,
    subscribe_notice.time,
    subscribe_notice.content,
    subscribe_notice.from_user_id
    FROM
    `user` ,
    subscribe_notice
    WHERE
    subscribe_notice.from_user_id = `user`.uid AND
    subscribe_notice.`read` = 0 AND
    subscribe_notice.to_user_id = #{toUserId,jdbcType=VARCHAR}
    ORDER BY
    subscribe_notice.time DESC
  </select>
  <select id="selectHistoryList" parameterType="java.lang.String" resultMap="SubscribeNoticeDto">
    SELECT
    `user`.avatar,
    `user`.nickname,
    subscribe_notice.sn_id,
    subscribe_notice.`read`,
    subscribe_notice.feed_id,
    subscribe_notice.time,
    subscribe_notice.content,
    subscribe_notice.from_user_id
    FROM
    `user` ,
    subscribe_notice
    WHERE
    subscribe_notice.from_user_id = `user`.uid AND
    subscribe_notice.`read` = -1 AND
    subscribe_notice.to_user_id = #{toUserId,jdbcType=VARCHAR}
    ORDER BY
    subscribe_notice.time DESC
  </select>
  <select id="selectByExample" parameterType="com.njit.zang.model.SubscribeNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subscribe_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subscribe_notice
    where sn_id = #{snId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from subscribe_notice
    where sn_id = #{snId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.njit.zang.model.SubscribeNoticeExample">
    delete from subscribe_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="sn_id" keyProperty="snId" parameterType="com.njit.zang.model.SubscribeNotice" useGeneratedKeys="true">
    insert into subscribe_notice (from_user_id, to_user_id, content, sn_id,
      `time`, feed_id, `read`)
    values (#{fromUserId,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{snId,jdbcType=VARCHAR},
      #{time,jdbcType=BIGINT}, #{feedId,jdbcType=VARCHAR}, #{read,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="sn_id" keyProperty="snId" parameterType="com.njit.zang.model.SubscribeNotice" useGeneratedKeys="true">
    insert into subscribe_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="feedId != null">
        feed_id,
      </if>
      <if test="read != null">
        `read`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="feedId != null">
        #{feedId,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        #{read,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njit.zang.model.SubscribeNoticeExample" resultType="java.lang.Long">
    select count(*) from subscribe_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update subscribe_notice
    <set>
      <if test="record.snId != null">
        sn_id = #{record.snId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUserId != null">
        from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.toUserId != null">
        to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.feedId != null">
        feed_id = #{record.feedId,jdbcType=VARCHAR},
      </if>
      <if test="record.read != null">
        `read` = #{record.read,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subscribe_notice
    set sn_id = #{record.snId,jdbcType=VARCHAR},
      from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=BIGINT},
      feed_id = #{record.feedId,jdbcType=VARCHAR},
      `read` = #{record.read,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njit.zang.model.SubscribeNotice">
    update subscribe_notice
    <set>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=BIGINT},
      </if>
      <if test="feedId != null">
        feed_id = #{feedId,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        `read` = #{read,jdbcType=INTEGER},
      </if>
    </set>
    where sn_id = #{snId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="java.lang.String">
    update subscribe_notice
    set `read` = -1
    where sn_id = #{snId,jdbcType=VARCHAR}
  </update>
</mapper>