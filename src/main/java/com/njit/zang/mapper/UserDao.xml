<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njit.zang.mapper.UserDao">
  <resultMap id="BaseResultMap" type="com.njit.zang.model.User">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <resultMap id="UserSendContent" type="com.njit.zang.model.UserSendContent">
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="release_time" jdbcType="BIGINT" property="releaseTime" />
    <result column="feed_id" jdbcType="INTEGER" property="feedId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, email, `password`, nickname, avatar
  </sql>
  <select id="selectByExample" parameterType="com.njit.zang.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAllUsers" resultMap="BaseResultMap">
    select * from user
  </select>
  
  <select id="selectAllContent" resultMap="UserSendContent">
    SELECT
      `user`.nickname,
      `user`.avatar,
      send_content.content,
      send_content.author_id as author_id,
      send_content.feed_id,
      send_content.release_time
      FROM
      `user`
      INNER JOIN send_content ON send_content.author_id = `user`.uid
      ORDER BY
        send_content.release_time DESC

  </select>
  <select id="selectContentByFeedId" parameterType="java.lang.String" resultMap="UserSendContent">
    SELECT
    `user`.nickname,
    `user`.avatar,
    send_content.content,
    send_content.author_id as author_id,
    send_content.feed_id,
    send_content.release_time
    FROM
    `user`
    INNER JOIN send_content ON send_content.author_id = `user`.uid
    WHERE
    send_content.feed_id = #{feedId,jdbcType=VARCHAR}
    ORDER BY
    send_content.release_time DESC

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where `uid` = #{uid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.njit.zang.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="com.njit.zang.model.User" useGeneratedKeys="true">
    insert into user (email, `password`, nickname, avatar
      )
    values (#{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="com.njit.zang.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njit.zang.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set `uid` = #{record.uid,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njit.zang.model.User">
    update user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njit.zang.model.User">
    update user
    set email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=VARCHAR}
  </update>
</mapper>